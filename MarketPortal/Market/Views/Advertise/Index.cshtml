@model AddAdvertiseSettingsViewModel

@{
    ViewData["Title"] = "Advertise";
}

@section Styles {
    <style>
        .advertise-section {
            width: 100%;
            height: 100%;
            padding: 0;
            margin: 0;
        }

        .advertise-section-container{
            max-width: 1200px;
            padding: 2rem;
            margin: 0 auto;
        }

        .back-button{
            padding: 8px 12px;
            border-radius: 12px;
        }

        :root {
            --primary: #4194cb; 
            --primary-light: #e6f2fa; 
            --dark: #2a6a94; 
            --light: #f5f9fc;
            --white: #FFFFFF;
            --gray: #757575;
            --dark-gray: #424242;
        }

        h1 {
            font-size: 2.2rem;
            margin-bottom: 1.5rem;
            color: var(--dark);
        }

        .ad-steps {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            position: relative;
            background-color: var(--white);
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            padding: 2rem;
        }

            .ad-steps::before {
                content: '';
                position: absolute;
                top: 52px;
                left: 0;
                right: 0;
                height: 2px;
                background-color: var(--primary-light);
                z-index: 1;
            }

        .step {
            text-align: center;
            position: relative;
            z-index: 2;
            width: 33%;
        }

        .step-number {
            width: 40px;
            height: 40px;
            background-color: var(--primary-light);
            color: var(--gray);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 0.5rem;
            font-weight: 600;
        }

        .step.active .step-number {
            background-color: var(--primary);
            color: var(--white);
        }

        .step.completed .step-number {
            background-color: var(--dark);
            color: var(--white);
        }

        .step-label {
            font-size: 0.9rem;
            color: var(--gray);
        }

        .step.active .step-label {
            color: var(--dark);
            font-weight: 600;
        }

        .card {
            background-color: var(--white);
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            padding: 2rem;
            margin-bottom: 2rem;
        }

        h2 {
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
            color: var(--dark-gray);
        }

        .option-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .option-card {
            border: 2px solid var(--primary-light);
            border-radius: 8px;
            padding: 1.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .option-card:hover {
                border-color: var(--primary);
                transform: translateY(-5px);
            }

            .option-card.selected {
                border-color: var(--primary);
                background-color: var(--primary-light);
            }

        .option-title {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--dark-gray);
        }

        .option-desc {
            font-size: 0.9rem;
            color: var(--gray);
            margin-bottom: 1rem;
        }

        .option-price {
            font-weight: 700;
            color: var(--primary);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .select, input {
            width: 100%;
            padding: 0.8rem;
            border: 1px solid #ddd;
            border-radius: 6px;
            font-size: 1rem;
        }

        .btn {
            display: inline-block;
            padding: 0.8rem 1.5rem;
            background-color: var(--primary);
            color: var(--white);
            border: none;
            border-radius: 6px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .btn:hover {
                background-color: var(--dark);
            }

        .btn-outline {
            background-color: transparent;
            border: 2px solid var(--primary);
            color: var(--primary);
        }

            .btn-outline:hover {
                background-color: var(--primary-light);
            }

        .action-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 2rem;
        }

        .checkout-summary {
            background-color: var(--primary-light);
            padding: 1.5rem;
            border-radius: 8px;
            margin-top: 2rem;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
        }

        .summary-total {
            font-weight: 700;
            font-size: 1.2rem;
            border-top: 1px solid #ddd;
            padding-top: 1rem;
            margin-top: 1rem;
        }

        .payment-options {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .payment-option {
            flex: 1;
            text-align: center;
        }

        .payment-btn {
            width: 100%;
            padding: 1rem;
            background-color: var(--white);
            border: 2px solid #ddd;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s;
        }

            .payment-btn:hover {
                border-color: var(--primary);
            }

            .payment-btn.selected {
                border-color: var(--primary);
                background-color: var(--primary-light);
            }

        .payment-label {
            display: block;
            margin-top: 0.5rem;
            font-weight: 500;
        }

        .hidden {
            display: none;
        }

        @@media (max-width: 768px) {
            .advertise-section-container {
                padding: 0.5rem;
            }

            .ad-steps {
                flex-direction: column;
                align-items: center;
                gap: 2rem;
                margin-bottom: 1rem;
            }

            .ad-steps::before {
                display: none;
            }

            .step {
                display: flex;
                align-items: center;
                gap: 1rem;
                width: 100%;
            }

            .step-number {
                margin: 0;
            }

            .step-label {
                text-align: left;
                flex-grow: 1;
            }

            .option-grid {
                grid-template-columns: 1fr;
            }

            .card {
                padding: 1.5rem 1rem;
            }

            .payment-options {
                flex-direction: column;
            }

            .action-buttons {
                flex-direction: column-reverse;
                gap: 1rem;
            }

            .action-buttons .btn,
            .action-buttons .btn-outline {
                width: 100%;
                text-align: center;
            }

        }

        @@media (max-width: 480px) {
            h1 {
                font-size: 1.8rem;
            }

            h2 {
                font-size: 1.3rem;
            }

            .step {
                font-size: 0.9rem;
            }

            .option-title {
                font-size: 1rem;
            }

            .option-desc {
                font-size: 0.85rem;
            }
        }
    </style>
}

<section class="advertise-section">
    <form asp-action="Create" asp-controller="Advertise" method="post">
        <div class="advertise-section-container">
            <h1>Boost Your Listings</h1>

            <div class="ad-steps">
                <div class="step active" id="step1">
                    <div class="step-number">1</div>
                    <div class="step-label">Choose Listings</div>
                </div>
                <div class="step" id="step2">
                    <div class="step-number">2</div>
                    <div class="step-label">Promotion Options</div>
                </div>
                <div class="step" id="step3">
                    <div class="step-number">3</div>
                    <div class="step-label">Checkout</div>
                </div>
            </div>

            <!-- Step 1: Choose Listings -->
            <div class="card" id="step1-content">
                <h2>Which listings would you like to promote?</h2>
                <div class="option-grid">
                    <div class="option-card" onclick="selectOption(this, 'single')">
                        <div class="option-title">Single Listing</div>
                        <div class="option-desc">Promote one specific listing to get more visibility</div>
                        <div class="option-price">$5.99/week</div>
                    </div>
                    <div class="option-card selected" id="advertiseAllCard" onclick="selectOption(this, 'all')">
                        <input type="hidden" id="offer-ids-input" name="OfferIds" asp-for="OfferIds" value="@(Model.OfferIds ?? string.Join(",", new List<int>()))" />


                        <div class="option-title">All Listings</div>
                        <div class="option-desc">Boost all your current and future listings</div>
                        <div class="option-price">$14.99/week</div>
                    </div>
                </div>

                <div class="form-group" id="listing-select-container" style="display: none;">

                    <label for="listing-select">Select listing to promote</label>
                    <select id="listing-select" class="select" onchange="selectOffer(this.value)">
                        <option value="">Select a listing</option>
                        @foreach(var offer in Model.AvailableOffers)
                        {
                            <option value="@offer.Id.ToString()">@($"{offer.Title} - {offer.PricePerKG} /KG")</option>
                        }
                    </select>
                </div>

                <div class="action-buttons">
                    <button class="btn-outline back-button" type="button" disabled>Back</button>
                    <button class="btn" onclick="nextStep(1)" type="button">Continue</button>
                </div>
            </div>

            <!-- Step 2: Promotion Options -->
            <div class="card hidden" id="step2-content">
                <h2>Select additional promotion options</h2>
                <div class="option-grid">
                    
                    <input type="hidden" name="HasEmailCampaign" asp-for="HasEmailCampaign" id="email-input" value="@Model.HasEmailCampaign" />
                    <input type="hidden" name="HasHighlightsSection" asp-for="HasHighlightsSection" id="highlights-input" value="@Model.HasHighlightsSection" />
                    <input type="hidden" name="HasPushNotifications" asp-for="HasPushNotifications" id="notifications-input" value="@Model.HasPushNotifications" />

                    <div class="option-card" onclick="toggleOption(this, 'email')">
                        <div class="option-title">Email Campaign</div>
                        <div class="option-desc">Send your listing to nearby users via email</div>
                        <div class="option-price">+$3.99/week</div>
                    </div>
                    <div class="option-card" onclick="toggleOption(this, 'highlights')">
                        <div class="option-title">Highlights Section</div>
                        <div class="option-desc">Featured placement in our highlights section</div>
                        <div class="option-price">+$4.99/week</div>
                    </div>
                    <div class="option-card" onclick="toggleOption(this, 'notifications')">
                        <div class="option-title">Push Notifications</div>
                        <div class="option-desc">Send notifications to users in your area</div>
                        <div class="option-price">+$2.99/week</div>
                    </div>
                </div>

                <div class="action-buttons">
                    <button class="btn-outline back-button" onclick="prevStep(2)" type="button">Back</button>
                    <button class="btn" onclick="nextStep(2)" type="button">Continue to Checkout</button>
                </div>
            </div>

            <!-- Step 3: Checkout -->
            <div class="card hidden" id="step3-content">
                <h2>Review Your Order</h2>

                <div class="checkout-summary">
                    <div class="summary-row">
                        <span>Base Promotion:</span>
                        <span id="base-price">$4.99/week</span>
                    </div>
                    <div class="summary-row">
                        <span>Email Campaign:</span>
                        <span id="email-price">$0.00</span>
                    </div>
                    <div class="summary-row">
                        <span>Highlights Section:</span>
                        <span id="highlight-price">$0.00</span>
                    </div>
                    <div class="summary-row">
                        <span>Push Notifications:</span>
                        <span id="notification-price">$0.00</span>
                    </div>
                    <div class="summary-row summary-total">
                        <span>Total:</span>
                        <span id="total-price">$14.99/week</span>
                    </div>
                </div>

                <h3 style="margin-top: 2rem;">Select Payment Frequency</h3>
                <div class="payment-options">
                    <input type="hidden" id="payment-type-input" asp-for="PaymentType" name="PaymentType" value="@Model.PaymentType" />

                    <div class="payment-option" >
                        <button class="payment-btn" onclick="selectPayment(this, 'One-Time')" id="oneTimePaymentButton" type="button">
                            One-Time
                        </button>
                        <span class="payment-label">Pay just once</span>
                    </div>
                    <div class="payment-option">
                        <button class="payment-btn selected" onclick="selectPayment(this, 'Weekly')" type="button">
                            Weekly
                        </button>
                        <span class="payment-label">Save 10%</span>
                    </div>
                    <div class="payment-option">
                        <button class="payment-btn" onclick="selectPayment(this, 'Monthly')" type="button">
                            Monthly
                        </button>
                        <span class="payment-label">Save 20%</span>
                    </div>
                </div>

                <div class="action-buttons" style="margin-top: 2rem;">
                    <button class="btn-outline back-button" onclick="prevStep(3)" type="button">Back</button>
                    <button class="btn" type="submit">Complete Payment</button>
                </div>
            </div>
        </div>
    </form>
</section>

@section Scripts {
    <script>
        // Current step tracking
        let currentStep = 1;

        // Selected options
        let selectedListingType = 'all';

        let selectedOptions = {
            email: false,
            highlights: false,
            notifications: false
        };
        let selectedPayment = 'One-Time';

        // Pricing
        const pricing = {
            single: 4.99,
            all: 4.99,
            email: 2.99,
            highlights: 4.99,
            notifications: 1.99
        };

        // Discounts
        const discounts = {
            'One-Time': 0,
            'Weekly': 0.1,
            'Monthly': 0.2
        };

        //Default
        selectOption(document.getElementById("advertiseAllCard"), 'all');
        selectPayment(document.getElementById("oneTimePaymentButton"), 'One-Time');


        function selectOption(card, type) {
            // Remove selected class from all options
            document.querySelectorAll('.option-card').forEach(el => {
                el.classList.remove('selected');
            });

            // Add selected class to clicked option
            card.classList.add('selected');

            // Update selected type
            selectedListingType = type;

            // Show/hide listing select dropdown
            if (type === 'single') {
                document.getElementById('listing-select-container').style.display = 'block';
            } else {

                // Set hidden input value to all available offers
                const offerIds = @Html.Raw(Json.Serialize(Model.AvailableOffers.Select(o => o.Id)));
                document.getElementById('offer-ids-input').value = offerIds.join(',');

                document.getElementById('listing-select-container').style.display = 'none';
            }

            // Update pricing in checkout
            updatePricing();
        }

        function toggleOption(card, option) {
            // Toggle selected class
            card.classList.toggle('selected');

            // Update selected options
            selectedOptions[option] = !selectedOptions[option];

            // Set hidden input value to reflect selection for Razor model binding
            document.getElementById(`${option}-input`).value = selectedOptions[option];


            // Update pricing in checkout
            updatePricing();
        }

        function selectOffer(id) {
            document.getElementById('offer-ids-input').value = id;
        }

        function selectPayment(button, type) {
            // Remove selected class from all options
            document.querySelectorAll('.payment-btn').forEach(el => {
                el.classList.remove('selected');
            });

            // Add selected class to clicked option
            button.classList.add('selected');

            // Update selected payment
            selectedPayment = type;

            // Set hidden input value so it's submitted with the form
            document.getElementById('payment-type-input').value = type;

            // Update pricing in checkout
            updatePricing();
        }

        function updatePricing() {
            // Calculate base price
            let basePrice = pricing[selectedListingType];
            document.getElementById('base-price').textContent = `$${basePrice.toFixed(2)}/week`;

            // Calculate additional options
            let emailPrice = selectedOptions.email ? pricing.email : 0;
            let highlightPrice = selectedOptions.highlights ? pricing.highlights : 0;
            let notificationPrice = selectedOptions.notifications ? pricing.notifications : 0;

            document.getElementById('email-price').textContent = `$${emailPrice.toFixed(2)}`;
            document.getElementById('highlight-price').textContent = `$${highlightPrice.toFixed(2)}`;
            document.getElementById('notification-price').textContent = `$${notificationPrice.toFixed(2)}`;

            // Calculate total
            let subtotal = basePrice + emailPrice + highlightPrice + notificationPrice;
            let discount = discounts[selectedPayment];
            let total = subtotal * (1 - discount);

            // Update display based on payment frequency
            let frequency = 'week';
            if (selectedPayment === 'Monthly') {
                total *= 4; // Show monthly total
                frequency = 'month';
            } else if (selectedPayment === 'One-Time') {
                frequency = 'one-time payment';
            }

            document.getElementById('total-price').textContent = `$${total.toFixed(2)}/${frequency}`;
        }

        function nextStep(step) {
            // Hide current step
            document.getElementById(`step${step}-content`).classList.add('hidden');

            // Update step indicator
            document.getElementById(`step${step}`).classList.remove('active');
            document.getElementById(`step${step}`).classList.add('completed');

            // Show next step
            currentStep = step + 1;
            document.getElementById(`step${currentStep}-content`).classList.remove('hidden');

            // Update step indicator
            document.getElementById(`step${currentStep}`).classList.add('active');

            // If going to checkout, update pricing
            if (currentStep === 3) {
                updatePricing();
            }

            console.log(document.getElementById('offer-ids-input').value);

        }

        function prevStep(step) {
            // Hide current step
            document.getElementById(`step${step}-content`).classList.add('hidden');

            // Update step indicator
            document.getElementById(`step${step}`).classList.remove('active');

            // Show previous step
            currentStep = step - 1;
            document.getElementById(`step${currentStep}-content`).classList.remove('hidden');

            // Update step indicator
            document.getElementById(`step${currentStep}`).classList.add('active');

        }
    </script>
}