@using Market.Data.Models
@model List<Offer>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    ViewData["Title"] = "Discover";
}

<section class="discover-section">
    <h1>@Localizer["Title"]</h1>

    <div class="discover-categories">
        <div class="category vegetables" category="Vegetables">
            <h2>@Localizer["Vegetables"]</h2>
        </div>
        <div class="category fruits" category="Fruits">
            <h2>@Localizer["Fruits"]</h2>
        </div>
        <div class="category dairy" category="Dairy">
            <h2>@Localizer["Dairy"]</h2>
        </div>
        <div class="category meat" category="Meat">
            <h2>@Localizer["Meat"]</h2>
        </div>
    </div>

    @if (Model.Count == 0)
    {
        <h1>@Localizer["NoOffersFound"]</h1>
    }

    <div class="discover-offers" id="discover-offers">
        @foreach (Offer offer in Model)
        {
            <div class="offer" category="@offer.Stock.OfferType.Category">
                <partial class="discover-offer-partial" name="_DiscoverOfferPartial" model="@offer" />
            </div>
        }
    </div>
</section>



<script>
    document.addEventListener("DOMContentLoaded", function () {
        const categories = document.querySelectorAll('.category');
        const offers = document.querySelectorAll('.offer');
        categories.forEach(function (category) {
            category.addEventListener('click', function () {
                const selectedCategory = category.getAttribute('category');

                offers.forEach(function (offer) {
                    const offerCategory = offer.getAttribute('category');

                    if (selectedCategory === "All" || selectedCategory === offerCategory) {
                        offer.style.display = 'block'; // Show the offer
                    } else {
                        offer.style.display = 'none';  // Hide the offer
                    }
                });
            });
        });
    });
</script>


