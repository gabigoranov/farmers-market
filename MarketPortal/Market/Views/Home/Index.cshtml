@using Market.Models
@using Market.Data.Models
@using Market.Models.DTO
@model OverviewViewModel

@{
    ViewData["Title"] = "Overview";
    string userId = ViewBag.UserId;
}

@section Styles {
    <link rel="stylesheet" href="~/css/pages/home/overview/layout.css">
    <link rel="stylesheet" href="~/css/pages/home/overview/components.css">
}



<div class="overview-container">
    <div class="money">
        <partial name="_StatisticPartial" model="@Model.Orders" />
    </div>
    <div class="orders">
        <h2>
            Incoming Orders:
        </h2>
        <a asp-action="Index" asp-controller="Orders">For more info click here</a>
        <hr />
        <div class="orders gapped scrollable padded" style="height: 80%;">
            @foreach (OrderDTO order in Model.Orders.Where(x => x.IsAccepted == false && x.IsDenied == false).Reverse().ToList())
            {
                <partial name="_OrderPartial" model="@order" />
            }
        </div>
    </div>
    <div class="reviews">
        <h2>
            Recent reviews:
        </h2>
        <a asp-action="Index" asp-controller="Reviews">For more info click here</a>
        <hr />
        <div class="gapped padded">
            @foreach (Review review in Model.Reviews.Take(4).Reverse().ToList())
            {
                <partial name="_ReviewPartial" model="@review" />
            }
        </div>
    </div>
    <div class="stocks ">
        <h2>
            Low stocks:
        </h2>
        <a asp-action="Index" asp-controller="Reviews">For more info click here</a>
        <hr />
        <div class="gapped scrollable padded" style="height: 80%;">
            @foreach (Stock stock in Model.Stocks.OrderBy(x => x.Quantity).Take(4).Reverse().ToList())
            {
                <partial name="_StockPartial" model="@stock" />
            }
        </div>
    </div>
</div>

     