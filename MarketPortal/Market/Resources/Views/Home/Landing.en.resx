<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AUR" xml:space="preserve">
    <value>Are you ready?</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="FAQCardText1" xml:space="preserve">
    <value>All of our products come directly from local farmers and small producers in your area. We prioritize fresh, organic, and sustainable practices to ensure the best quality for you and support your local community.</value>
  </data>
  <data name="FAQCardText2" xml:space="preserve">
    <value>Since the food is sourced directly from local farmers and producers, it's typically harvested or prepared shortly before it reaches you. We work closely with our partners to ensure that everything is delivered fresh and at peak quality.</value>
  </data>
  <data name="FAQCardText3" xml:space="preserve">
    <value>If there’s any problem with your order—such as missing items, incorrect products, or delivery issues—please contact our support team, and we’ll be happy to assist you.</value>
  </data>
  <data name="FAQCardText4" xml:space="preserve">
    <value>Due to the perishable nature of food, returns are not typically accepted. However, if you’re not satisfied with your order, please reach out to us, and we’ll do our best to resolve the issue.</value>
  </data>
  <data name="FAQCardTitle1" xml:space="preserve">
    <value>Where do the products come from?</value>
  </data>
  <data name="FAQCardTitle2" xml:space="preserve">
    <value>How do I know the food is fresh?</value>
  </data>
  <data name="FAQCardTitle3" xml:space="preserve">
    <value>What if there’s an issue with my order?</value>
  </data>
  <data name="FAQCardTitle4" xml:space="preserve">
    <value>Can I return products if I’m not satisfied?</value>
  </data>
  <data name="FAQTitle" xml:space="preserve">
    <value>Frequently Asked Questions</value>
  </data>
  <data name="FBComment1" xml:space="preserve">
    <value>"Great app, modern design and easy to use!"</value>
  </data>
  <data name="FBComment2" xml:space="preserve">
    <value>"The special deals for organizations are a nice touch."</value>
  </data>
  <data name="FBComment3" xml:space="preserve">
    <value>"The seller tools and statistics are really usefull!"</value>
  </data>
  <data name="FBName1" xml:space="preserve">
    <value>David Redzay</value>
  </data>
  <data name="FBName2" xml:space="preserve">
    <value>Emil Makariev</value>
  </data>
  <data name="FBName3" xml:space="preserve">
    <value>Svetlozar Kogiev</value>
  </data>
  <data name="FeedbackTitle" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="HDIWCardText1" xml:space="preserve">
    <value>First download the mobile application, create a profile and sign in.</value>
  </data>
  <data name="HDIWCardText2" xml:space="preserve">
    <value>Once you have logged into the application you can quickly and easily choose and order some groceries from producers near you!</value>
  </data>
  <data name="HDIWCardText3" xml:space="preserve">
    <value>After purchasing your groceries you can expect a delivery right to your home.</value>
  </data>
  <data name="HDIWCardTitle1" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="HDIWCardTitle2" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="HDIWCardTitle3" xml:space="preserve">
    <value>Delivery</value>
  </data>
  <data name="HDIWTitle" xml:space="preserve">
    <value>How does it work?</value>
  </data>
  <data name="HeroText" xml:space="preserve">
    <value>Support local farmers and enjoy farm-fresh&lt;br /&gt;groceries delivered fast and easy.</value>
  </data>
  <data name="HeroTitle" xml:space="preserve">
    <value>Fresh&lt;br /&gt;Delicious&lt;br /&gt;Local&lt;br /&gt;Groceries</value>
  </data>
  <data name="SellerConsole" xml:space="preserve">
    <value>Seller Console</value>
  </data>
  <data name="SellNow" xml:space="preserve">
    <value>Sell Now</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="WCUCardText1" xml:space="preserve">
    <value>By purchasing directly from local farmers and producers, you get access to the freshest ingredients.</value>
  </data>
  <data name="WCUCardText2" xml:space="preserve">
    <value>Every purchase you make through the app helps sustain local farms and small businesses.</value>
  </data>
  <data name="WCUCardText3" xml:space="preserve">
    <value>Buying local means fewer food miles, reducing the environmental impact of transportation and packaging.</value>
  </data>
  <data name="WCUCardTitle1" xml:space="preserve">
    <value>Freshness and Quality</value>
  </data>
  <data name="WCUCardTitle2" xml:space="preserve">
    <value>Supporting the Local Community</value>
  </data>
  <data name="WCUCardTitle3" xml:space="preserve">
    <value>Sustainable and Eco-friendly</value>
  </data>
  <data name="WCUTitle" xml:space="preserve">
    <value>Why Choose Us?</value>
  </data>
</root>