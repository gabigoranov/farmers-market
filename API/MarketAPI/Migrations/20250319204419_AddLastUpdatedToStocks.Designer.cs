// <auto-generated />
using System;
using MarketAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketAPI.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20250319204419_AddLastUpdatedToStocks")]
    partial class AddLastUpdatedToStocks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MarketAPI.Data.Models.BillingDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BillingDetails");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PricePerKG")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("StockId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.OfferType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OfferTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Fruits",
                            Name = "Apples"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Fruits",
                            Name = "Bananas"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Fruits",
                            Name = "Grapes"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Vegetables",
                            Name = "Lettuce"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Vegetables",
                            Name = "Onions"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Meat",
                            Name = "Steak"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Vegetables",
                            Name = "Potatoes"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Fruits",
                            Name = "Strawberries"
                        });
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BillingDetailsId")
                        .HasColumnType("int");

                    b.Property<Guid?>("BuyerId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateDelivered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrdered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDenied")
                        .HasColumnType("bit");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int>("OfferTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("SellerId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BillingDetailsId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("OfferId");

                    b.HasIndex("OfferTypeId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("SellerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BillingDetailsId")
                        .HasColumnType("int");

                    b.Property<Guid?>("BuyerId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateDelivered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrdered")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BillingDetailsId");

                    b.HasIndex("BuyerId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfferTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("SellerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OfferTypeId");

                    b.HasIndex("SellerId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ExpiryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(220)
                        .HasColumnType("nvarchar(220)");

                    b.Property<int>("Discriminator")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirebaseToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("LastName")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TokenId")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<int>("Discriminator").HasValue(0);
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Organization", b =>
                {
                    b.HasBaseType("MarketAPI.Data.Models.User");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Seller", b =>
                {
                    b.HasBaseType("MarketAPI.Data.Models.User");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("MarketAPI.Data.Models.BillingDetails", b =>
                {
                    b.HasOne("MarketAPI.Data.Models.User", "User")
                        .WithMany("BillingDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Offer", b =>
                {
                    b.HasOne("MarketAPI.Data.Models.Seller", "Owner")
                        .WithMany("Offers")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketAPI.Data.Models.Stock", "Stock")
                        .WithMany("Offers")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Order", b =>
                {
                    b.HasOne("MarketAPI.Data.Models.BillingDetails", "BillingDetails")
                        .WithMany("Orders")
                        .HasForeignKey("BillingDetailsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MarketAPI.Data.Models.User", "Buyer")
                        .WithMany("BoughtOrders")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MarketAPI.Data.Models.Offer", "Offer")
                        .WithMany("Orders")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MarketAPI.Data.Models.OfferType", "OfferType")
                        .WithMany()
                        .HasForeignKey("OfferTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketAPI.Data.Models.Purchase", null)
                        .WithMany("Orders")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("MarketAPI.Data.Models.Seller", "Seller")
                        .WithMany("SoldOrders")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BillingDetails");

                    b.Navigation("Buyer");

                    b.Navigation("Offer");

                    b.Navigation("OfferType");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Purchase", b =>
                {
                    b.HasOne("MarketAPI.Data.Models.BillingDetails", "BillingDetails")
                        .WithMany("Purchases")
                        .HasForeignKey("BillingDetailsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MarketAPI.Data.Models.User", "Buyer")
                        .WithMany("BoughtPurchases")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BillingDetails");

                    b.Navigation("Buyer");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Review", b =>
                {
                    b.HasOne("MarketAPI.Data.Models.Offer", "Offer")
                        .WithMany("Reviews")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Stock", b =>
                {
                    b.HasOne("MarketAPI.Data.Models.OfferType", "OfferType")
                        .WithMany()
                        .HasForeignKey("OfferTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MarketAPI.Data.Models.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferType");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Token", b =>
                {
                    b.HasOne("MarketAPI.Data.Models.User", "User")
                        .WithOne("Token")
                        .HasForeignKey("MarketAPI.Data.Models.Token", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.BillingDetails", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Offer", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Purchase", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Stock", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.User", b =>
                {
                    b.Navigation("BillingDetails");

                    b.Navigation("BoughtOrders");

                    b.Navigation("BoughtPurchases");

                    b.Navigation("Token");
                });

            modelBuilder.Entity("MarketAPI.Data.Models.Seller", b =>
                {
                    b.Navigation("Offers");

                    b.Navigation("SoldOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
